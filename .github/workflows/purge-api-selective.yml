name: Purge Selective API Tokens
on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Preview only (true = don't delete)"
        required: true
        default: "true"

jobs:
  purge_selective:
    runs-on: ubuntu-latest
    env:
      CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
      CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
      KV_NS_ID: ${{ secrets.KV_NS_ID_TOKENS }}
      DRY_RUN: ${{ github.event.inputs.dry_run }}
    steps:
      - name: Purge pending/unmatched keys
        shell: bash
        run: |
          set -euo pipefail

          echo "Namespace: $KV_NS_ID"
          echo "Dry run: $DRY_RUN"

          api_keys=$(curl -sS -H "Authorization: Bearer $CF_API_TOKEN" \
            "https://api.cloudflare.com/client/v4/accounts/$CF_ACCOUNT_ID/storage/kv/namespaces/$KV_NS_ID/keys?prefix=api%3A&limit=1000" \
            | jq -r '.result[].name')

          if [ -z "${api_keys:-}" ]; then
            echo "No api:* keys found."
            exit 0
          fi

          to_delete=()

          for key in $api_keys; do
            val=$(curl -sS -H "Authorization: Bearer $CF_API_TOKEN" \
              "https://api.cloudflare.com/client/v4/accounts/$CF_ACCOUNT_ID/storage/kv/namespaces/$KV_NS_ID/values/$key" \
              || echo "")
            [ -z "$val" ] && continue

            status=$(echo "$val" | jq -r '.status // empty')
            open_id=$(echo "$val" | jq -r '.open_id // empty')

            if [ "$status" = "pending" ]; then
              to_delete+=("$key")
              continue
            fi

            if [ "$status" = "active" ] && [ -n "$open_id" ]; then
              tok_val=$(curl -sS -H "Authorization: Bearer $CF_API_TOKEN" \
                "https://api.cloudflare.com/client/v4/accounts/$CF_ACCOUNT_ID/storage/kv/namespaces/$KV_NS_ID/values/tok:open:$open_id" \
                || echo "")
              if [ -z "$tok_val" ]; then
                to_delete+=("$key")
              fi
            fi
          done

          if [ "${#to_delete[@]}" -eq 0 ]; then
            echo "Nothing to delete."
            exit 0
          fi

          echo "Keys to delete (${#to_delete[@]}):"
          printf '%s\n' "${to_delete[@]}"

          if [ "$DRY_RUN" = "true" ]; then
            echo "Dry run: skipping delete."
            exit 0
          fi

          echo "Deleting..."
          for key in "${to_delete[@]}"; do
            echo "Deleting $key"
            curl -sS -X DELETE -H "Authorization: Bearer $CF_API_TOKEN" \
              "https://api.cloudflare.com/client/v4/accounts/$CF_ACCOUNT_ID/storage/kv/namespaces/$KV_NS_ID/values/$key" \
              >/dev/null
          done

          echo "Done."